#ifndef FOC_H
#define FOC_H

#include "main.h"

typedef enum {
    FOC_STATE_INIT,
    FOC_STATE_BOOTUP_SOUND,
    FOC_STATE_CURRENT_SENSOR_CALIBRATION,
    FOC_STATE_IDENTIFY,
    FOC_STATE_ANTICOGGING,
    FOC_STATE_CHECKLIST,
    FOC_STATE_PID_AUTOTUNE,
    FOC_STATE_GENERAL_TEST,
    FOC_STATE_ERROR,
    FOC_STATE_CALIBRATION,
    FOC_STATE_ALIGNMENT,
    FOC_STATE_ALIGNMENT_TEST,
    FOC_STATE_RUN,
    FOC_STATE_FLASH_SAVE,
    FOC_STATE_OPENLOOP
} FOC_State;


#define MOTOR_POLE_PAIRS 11
#define MOTOR_STATOR_RESISTANCE 0.2f // ohms
#define MOTOR_STATOR_INDUCTANCE 2.5e-05f // henries
#define MOTOR_TORQUE_CONSTANT (8.23 / 380) // Nm/A

#define INPUT_VOLTAGE 24.0f
#define VOLTAGE_LIMIT 4.0f //max voltage output by the inverter, limits max speed

#define CURRENT_PID_LIMIT (VOLTAGE_LIMIT * M_1_SQRT3F)
#define CURRENT_PID_INT_LIMIT (CURRENT_PID_LIMIT * 0.8f)

#define SPEED_PID_LIMIT 10.0f //Ampere setpoint
#define SPEED_PID_INT_LIMIT (SPEED_PID_LIMIT * 0.8f)

#define OUTER_LOOP_FREQUENCY 2000

void FOC_Setup();
void FOC_Loop();

#endif // FOC_H